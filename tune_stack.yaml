AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Spin up cluster of instances for keras tuning
Parameters:
  MasterInstType:
    Type: String
    Description: Master instance type
    Default: t3.large
  OutputPath:
    Type: String
    Description: s3 path to place output
    Default: s3://openai-scf/default
  MaxEpochs:
    Type: String
    Description: max epochs per trial
    Default: 3
Resources:
  TunerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Security Group for openAI Tuning
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 6012
          ToPort: 6012
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          CidrIp: 0.0.0.0/0
  TunerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ec2.amazonaws.com]
          Action: ['sts:AssumeRole']
      Path: /
      Policies:
      - PolicyName: keras-tuner-policy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action: [
              's3:*',
              'iam:PassRole',
              ]
            Resource: '*'
  TunerRoleInstProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - !Ref TunerRole
  MasterLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        InstanceType: !Ref MasterInstType
        ImageId: ami-0e2a8509db267f072
        KeyName: amKeyPair
        SecurityGroups:
          - !Ref 'TunerSecurityGroup'
      LaunchTemplateName: !Sub ${AWS::StackName}_tuner_master
  TunerMaster:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref MasterLaunchTemplate
        Version: '1'
      IamInstanceProfile: !Ref TunerRoleInstProfile
      Tags:
        -
          Key: Name
          Value: !Sub ${AWS::StackName}_master
      UserData:
        Fn::Base64:
          Fn::Sub:
            - |
              #!/bin/bash
              yum -y install git
              cd /home/ec2-user
              su ec2-user -c 'git clone https://github.com/scfox/openAI.git'
              su ec2-user -c 'cd openAI; ./tune_master.sh ${OutputPath} ${MaxEpochs};'
            - OutputPath: !Ref OutputPath
              MaxEpochs: !Ref MaxEpochs
Outputs:
  URL:
    Value: !Join ['', ['http://', !GetAtt TunerMaster.PublicIp, ':6012' ]]
